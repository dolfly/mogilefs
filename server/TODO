-- replication policy error storm when a device is known to be observably down:

[replicate(28037)] replication policy ran out of suggestions for us replicating fid 197214
[replicate(28037)] replication policy ran out of suggestions for us replicating fid 197237
[replicate(28037)] replication policy ran out of suggestions for us replicating fid 197219
[replicate(28037)] replication policy ran out of suggestions for us replicating fid 197256
[replicate(28037)] replication policy ran out of suggestions for us replicating fid 197226

-- telnet to 7001 and send "!"<enter>  will crash.

-- tempfile cleanup

-- fsck job/command.  need 'last fsck' table per fid?  or column?

-- fix haphazard CapitalStyle vs capital_style in ProcManager for class methods

-- make monitor job try to do a PUT, to detect for read-only mode if kernel
   fs remounted itself after an error.
     -- propogate a different 'down' messaeg from 'readonly' observed state

-- 'every' func should select on psock, to process parent-sent commands
   during worker's breaks

-- create close could wake a replicate process.

-- optional 'wait_until_replicated=1' flag to create close, so client doesn't
   get success until file is everywhere.

-- redo/reevaluate the 'unreachable_fids' logic:  unreachable should only mean
   host/device are up, but file is 404.

-- test database failures

-- identify idempotent commands and replay them 'n' times if query worker dies
   during processing.

-- have queries workers be able to broadcast back up to parent "can't parse this"
   at which point parent parses it (e.g. "help" command), so admins don't
   need to remember the "!" prefix.  of course, "!" prefix can always be used to
   reach parent faster.

-- mb_asof handling in find_deviceid seems broken.  less than max age?  wrong units.

-- change 'observable_state' from 'alive/down' to 'reachable/unreachable' and
   add in the concept of writable vs not too... so maybe writable/readable/unreachable
   instead.

-- make generic script to write out usage files for people not using mogstored
    -- or, let mogstored be run in 'usage' file writing only mode

-- wake up deleter process?  totally overkill, but why not?

* 404 storms during replicating:  (1.5 year old email, might be fixed, verify)

:: [replicate(12648)] Error: Resource http://10.0.0.82:7500/dev15/0/015/693/0015693821.fid failed: HTTP 404
:: [replicate(12648)] Copier failed replicating 15693821
:: [replicate(12648)] Error: Resource http://10.0.0.82:7500/dev15/0/015/693/0015693819.fid failed: HTTP 404
:: [replicate(12648)] Copier failed replicating 15693819
:: [replicate(12648)] Error: Resource http://10.0.0.81:7500/dev9/0/015/693/0015693844.fid failed: HTTP 404
:: [replicate(12648)] Copier failed replicating 15693844
:: [replicate(12646)] Copier failed replicating 15693846
:: [replicate(12646)] Error: Resource http://10.0.0.82:7500/dev15/0/015/693/0015693821.fid failed: HTTP 404
:: [replicate(12646)] Copier failed replicating 15693821
:: [replicate(12646)] Error: Resource http://10.0.0.81:7500/dev9/0/015/693/0015693844.fid failed: HTTP 404
:: [replicate(12646)] Copier failed replicating 15693844
:: [replicate(12648)] Error: Resource http://10.0.0.81:7500/dev3/0/015/693/0015693848.fid failed: HTTP 404
:: [replicate(12650)] Error: Resource http://10.0.0.82:7500/dev15/0/015/693/0015693819.fid failed: HTTP 404
:: [replicate(12648)] Copier failed replicating 15693848
......

